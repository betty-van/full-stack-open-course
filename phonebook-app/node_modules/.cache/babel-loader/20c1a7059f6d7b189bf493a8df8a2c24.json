{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Betty Van\\\\Documents\\\\Learn-Programming\\\\fullStackOpen\\\\full-stack-open-part-2-phonebook\\\\phonebook-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Betty Van\\\\Documents\\\\Learn-Programming\\\\fullStackOpen\\\\full-stack-open-part-2-phonebook\\\\phonebook-app\\\\src\\\\components\\\\PersonForm.js\";\nimport React from 'react';\nimport personsService from '../services/persons';\n\nconst PersonForm = props => {\n  // To add name\n  const addName = event => {\n    // No reload\n    event.preventDefault(); // Take out names into an array\n\n    const names = props.persons.map(person => person.name); // If name matches, then do not add to list\n\n    if (names.indexOf(props.newName) !== -1) {\n      const result = window.confirm(`${props.newName} already exists in the phonebook, replace the old number with a new one?`);\n      const person = props.persons.find(p => p.name === props.newName);\n\n      const changedPerson = _objectSpread({}, person, {\n        number: props.newNumber\n      });\n\n      personsServer.update(person.id, changedPerson).then(response => {\n        setPersons(persons.map(person => person.id));\n      });\n      props.setNewName('');\n      props.setNewNumber('');\n    } // If name does not exist, add to list\n    else if (names.indexOf(props.newName) === -1) {\n        const nameObject = {\n          name: props.newName,\n          number: props.newNumber\n        };\n        personsService.create(nameObject).then(response => {\n          props.setPersons(props.persons.concat(response));\n          props.setNewName('');\n          props.setNewNumber('');\n        }).catch(error => {\n          console.log('something went wrong', error);\n        });\n      }\n  };\n\n  const handleNameChange = event => {\n    props.setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    props.setNewNumber(event.target.value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    onSubmit: addName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"name: \", React.createElement(\"input\", {\n    value: props.newName,\n    onChange: handleNameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"number: \", React.createElement(\"input\", {\n    value: props.newNumber,\n    onChange: handleNumberChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"add\"))));\n};\n\nexport default PersonForm;","map":{"version":3,"sources":["C:/Users/Betty Van/Documents/Learn-Programming/fullStackOpen/full-stack-open-part-2-phonebook/phonebook-app/src/components/PersonForm.js"],"names":["React","personsService","PersonForm","props","addName","event","preventDefault","names","persons","map","person","name","indexOf","newName","result","window","confirm","find","p","changedPerson","number","newNumber","personsServer","update","id","then","response","setPersons","setNewName","setNewNumber","nameObject","create","concat","catch","error","console","log","handleNameChange","target","value","handleNumberChange"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport personsService from '../services/persons'\r\n\r\nconst PersonForm = (props) => {\r\n\r\n    // To add name\r\n    const addName = (event) => {\r\n        // No reload\r\n        event.preventDefault()\r\n        \r\n        // Take out names into an array\r\n        const names = props.persons.map(person => person.name)\r\n\r\n        // If name matches, then do not add to list\r\n        if (names.indexOf(props.newName) !== -1) {\r\n            const result = window.confirm(`${props.newName} already exists in the phonebook, replace the old number with a new one?`)\r\n            const person = props.persons.find(p => p.name === props.newName)\r\n            const changedPerson = {...person, number: props.newNumber}\r\n            \r\n            personsServer\r\n                .update(person.id, changedPerson)\r\n                .then(response => {\r\n                    setPersons(persons.map(person => person.id))\r\n                })\r\n            props.setNewName('')\r\n            props.setNewNumber('')\r\n        }\r\n        // If name does not exist, add to list\r\n        else if (names.indexOf(props.newName) === -1) {\r\n            const nameObject = {\r\n                name: props.newName,\r\n                number: props.newNumber\r\n            }\r\n\r\n            personsService\r\n                .create(nameObject)\r\n                .then(response => {\r\n                    props.setPersons(props.persons.concat(response))\r\n                    props.setNewName('')\r\n                    props.setNewNumber('')\r\n                    })\r\n                .catch(error => {\r\n                    console.log('something went wrong', error)\r\n                })\r\n            } \r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        props.setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        props.setNewNumber(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={addName}>\r\n                <div>\r\n                    name: <input value={props.newName} onChange={handleNameChange} />\r\n                </div>\r\n                <div>number: <input value={props.newNumber} onChange={handleNumberChange} /></div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonForm"]},"metadata":{},"sourceType":"module"}