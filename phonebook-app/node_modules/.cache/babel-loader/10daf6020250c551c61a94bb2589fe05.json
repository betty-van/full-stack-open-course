{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Betty Van\\\\Documents\\\\Learn-Programming\\\\fullStackOpen\\\\full-stack-open-part-2-phonebook\\\\phonebook-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Betty Van\\\\Documents\\\\Learn-Programming\\\\fullStackOpen\\\\full-stack-open-part-2-phonebook\\\\phonebook-app\\\\src\\\\components\\\\PersonForm.js\";\nimport React from 'react';\nimport personsService from '../services/persons';\n\nconst PersonForm = ({\n  persons,\n  newName\n}) => {\n  // To add name\n  const addName = event => {\n    // No reload\n    event.preventDefault(); // Take out names into an array\n\n    const names = persons.map(person => person.name); // If name matches, then do not add to list\n\n    if (names.indexOf(newName) !== -1) {\n      const result = window.confirm(`${newName} already exists in the phonebook, replace the old number with a new one?`);\n      const thisPerson = persons.find(p => p.name === props.newName);\n\n      const changedPerson = _objectSpread({}, thisPerson, {\n        number: props.newNumber\n      });\n\n      if (result === true) {\n        personsService.update(thisPerson.id, changedPerson).then(response => {\n          console.log(response);\n          props.setPersons(props.persons.map(person => person.id !== thisPerson.id ? person : response));\n        });\n        props.setNewName('');\n        props.setNewNumber('');\n      }\n    } // If name does not exist, add to list\n    else if (names.indexOf(props.newName) === -1) {\n        const nameObject = {\n          name: props.newName,\n          number: props.newNumber\n        };\n        personsService.create(nameObject).then(response => {\n          props.setPersons(props.persons.concat(response));\n          props.setNewName('');\n          props.setNewNumber('');\n        }).catch(error => {\n          console.log('something went wrong', error);\n        });\n      }\n  };\n\n  const handleNameChange = event => {\n    props.setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    props.setNewNumber(event.target.value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    onSubmit: addName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"name: \", React.createElement(\"input\", {\n    value: props.newName,\n    onChange: handleNameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"number: \", React.createElement(\"input\", {\n    value: props.newNumber,\n    onChange: handleNumberChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"add\"))));\n};\n\nexport default PersonForm;","map":{"version":3,"sources":["C:/Users/Betty Van/Documents/Learn-Programming/fullStackOpen/full-stack-open-part-2-phonebook/phonebook-app/src/components/PersonForm.js"],"names":["React","personsService","PersonForm","persons","newName","addName","event","preventDefault","names","map","person","name","indexOf","result","window","confirm","thisPerson","find","p","props","changedPerson","number","newNumber","update","id","then","response","console","log","setPersons","setNewName","setNewNumber","nameObject","create","concat","catch","error","handleNameChange","target","value","handleNumberChange"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport personsService from '../services/persons'\r\n\r\nconst PersonForm = ({persons, newName }) => {\r\n\r\n    // To add name\r\n    const addName = (event) => {\r\n        // No reload\r\n        event.preventDefault()\r\n        \r\n        // Take out names into an array\r\n        const names = persons.map(person => person.name)\r\n\r\n        // If name matches, then do not add to list\r\n        if (names.indexOf(newName) !== -1) {\r\n            const result = window.confirm(`${newName} already exists in the phonebook, replace the old number with a new one?`)\r\n            const thisPerson = persons.find(p => p.name === props.newName)\r\n            const changedPerson = {...thisPerson, number: props.newNumber}\r\n            \r\n            if (result === true) {\r\n                personsService\r\n                    .update(thisPerson.id, changedPerson)\r\n                    .then(response => {\r\n                        console.log(response)\r\n                        props.setPersons(props.persons.map(person => person.id !== thisPerson.id ? person : response))\r\n                    })\r\n\r\n                props.setNewName('')\r\n                props.setNewNumber('')\r\n            }\r\n        }\r\n        // If name does not exist, add to list\r\n        else if (names.indexOf(props.newName) === -1) {\r\n            const nameObject = {\r\n                name: props.newName,\r\n                number: props.newNumber\r\n            }\r\n\r\n            personsService\r\n                .create(nameObject)\r\n                .then(response => {\r\n                    props.setPersons(props.persons.concat(response))\r\n                    props.setNewName('')\r\n                    props.setNewNumber('')\r\n                    })\r\n                .catch(error => {\r\n                    console.log('something went wrong', error)\r\n                })\r\n            } \r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        props.setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        props.setNewNumber(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={addName}>\r\n                <div>\r\n                    name: <input value={props.newName} onChange={handleNameChange} />\r\n                </div>\r\n                <div>number: <input value={props.newNumber} onChange={handleNumberChange} /></div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonForm"]},"metadata":{},"sourceType":"module"}