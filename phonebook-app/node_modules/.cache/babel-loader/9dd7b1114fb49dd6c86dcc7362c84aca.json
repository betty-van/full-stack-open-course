{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Betty Van\\\\Documents\\\\Learn-Programming\\\\fullStackOpen\\\\full-stack-open-part-2-phonebook\\\\phonebook-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Betty Van\\\\Documents\\\\Learn-Programming\\\\fullStackOpen\\\\full-stack-open-part-2-phonebook\\\\phonebook-app\\\\src\\\\components\\\\PersonForm.js\";\nimport React from 'react';\nimport personsService from '../services/persons';\n\nconst PersonForm = ({\n  persons,\n  newName,\n  newNumber,\n  setNewName,\n  set\n}) => {\n  // To add name\n  const addName = event => {\n    // No reload\n    event.preventDefault(); // Take out names into an array\n\n    const names = persons.map(person => person.name); // If name matches, then do not add to list\n\n    if (names.indexOf(newName) !== -1) {\n      const result = window.confirm(`${newName} already exists in the phonebook, replace the old number with a new one?`);\n      const thisPerson = persons.find(p => p.name === newName);\n\n      const changedPerson = _objectSpread({}, thisPerson, {\n        number: newNumber\n      });\n\n      if (result === true) {\n        personsService.update(thisPerson.id, changedPerson).then(response => {\n          console.log(response);\n          props.setPersons(persons.map(person => person.id !== thisPerson.id ? person : response));\n        });\n        setNewName('');\n        setNewNumber('');\n      }\n    } // If name does not exist, add to list\n    else if (names.indexOf(newName) === -1) {\n        const nameObject = {\n          name: newName,\n          number: newNumber\n        };\n        personsService.create(nameObject).then(response => {\n          setPersons(persons.concat(response));\n          setNewName('');\n          setNewNumber('');\n        }).catch(error => {\n          console.log('something went wrong', error);\n        });\n      }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    onSubmit: addName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"name: \", React.createElement(\"input\", {\n    value: newName,\n    onChange: handleNameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"number: \", React.createElement(\"input\", {\n    value: newNumber,\n    onChange: handleNumberChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"add\"))));\n};\n\nexport default PersonForm;","map":{"version":3,"sources":["C:/Users/Betty Van/Documents/Learn-Programming/fullStackOpen/full-stack-open-part-2-phonebook/phonebook-app/src/components/PersonForm.js"],"names":["React","personsService","PersonForm","persons","newName","newNumber","setNewName","set","addName","event","preventDefault","names","map","person","name","indexOf","result","window","confirm","thisPerson","find","p","changedPerson","number","update","id","then","response","console","log","props","setPersons","setNewNumber","nameObject","create","concat","catch","error","handleNameChange","target","value","handleNumberChange"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport personsService from '../services/persons'\r\n\r\nconst PersonForm = ({persons, newName, newNumber, setNewName, set }) => {\r\n\r\n    // To add name\r\n    const addName = (event) => {\r\n        // No reload\r\n        event.preventDefault()\r\n        \r\n        // Take out names into an array\r\n        const names = persons.map(person => person.name)\r\n\r\n        // If name matches, then do not add to list\r\n        if (names.indexOf(newName) !== -1) {\r\n            const result = window.confirm(`${newName} already exists in the phonebook, replace the old number with a new one?`)\r\n            const thisPerson = persons.find(p => p.name === newName)\r\n            const changedPerson = {...thisPerson, number: newNumber}\r\n            \r\n            if (result === true) {\r\n                personsService\r\n                    .update(thisPerson.id, changedPerson)\r\n                    .then(response => {\r\n                        console.log(response)\r\n                        props.setPersons(persons.map(person => person.id !== thisPerson.id ? person : response))\r\n                    })\r\n\r\n                setNewName('')\r\n                setNewNumber('')\r\n            }\r\n        }\r\n        // If name does not exist, add to list\r\n        else if (names.indexOf(newName) === -1) {\r\n            const nameObject = {\r\n                name: newName,\r\n                number: newNumber\r\n            }\r\n\r\n            personsService\r\n                .create(nameObject)\r\n                .then(response => {\r\n                    setPersons(persons.concat(response))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                    })\r\n                .catch(error => {\r\n                    console.log('something went wrong', error)\r\n                })\r\n            } \r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={addName}>\r\n                <div>\r\n                    name: <input value={newName} onChange={handleNameChange} />\r\n                </div>\r\n                <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonForm"]},"metadata":{},"sourceType":"module"}