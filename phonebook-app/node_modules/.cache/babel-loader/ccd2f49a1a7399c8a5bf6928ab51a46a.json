{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Betty Van\\\\Documents\\\\Learn-Programming\\\\fullStackOpen\\\\full-stack-open-part-2-phonebook\\\\phonebook-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Betty Van\\\\Documents\\\\Learn-Programming\\\\fullStackOpen\\\\full-stack-open-part-2-phonebook\\\\phonebook-app\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\n\nconst App = () => {\n  const _useState = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456'\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523'\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345'\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122'\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        persons = _useState2[0],\n        setPersons = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newName = _useState4[0],\n        setNewName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newNumber = _useState6[0],\n        setNewNumber = _useState6[1]; // Display the name of each person on render\n\n\n  const rows = () => persons.map(person => React.createElement(\"p\", {\n    key: person.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, person.name, \" \", person.number)); // To add name\n\n\n  const addName = event => {\n    // No reload\n    event.preventDefault(); // Take out names into an array\n\n    const names = persons.map(person => person.name); // If name matches, then do not add to list\n\n    if (names.indexOf(newName) !== -1) {\n      alert(`${newName} already exists in the phonebook`);\n      setNewName('');\n      setNewNumber('');\n    } // If name does not exist, add to list\n    else if (names.indexOf(newName) === -1) {\n        const nameObject = {\n          name: newName,\n          id: persons.length + 1,\n          number: newNumber\n        };\n        setPersons(persons.concat(nameObject));\n        setNewName('');\n        setNewNumber('');\n      }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Phonebook\"), React.createElement(\"form\", {\n    onSubmit: addName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"name: \", React.createElement(\"input\", {\n    value: newName,\n    onChange: handleNameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"number: \", React.createElement(\"input\", {\n    value: newNumber,\n    onChange: handleNumberChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"add\"))), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Numbers\"), rows());\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Betty Van/Documents/Learn-Programming/fullStackOpen/full-stack-open-part-2-phonebook/phonebook-app/src/App.js"],"names":["React","useState","App","name","number","persons","setPersons","newName","setNewName","newNumber","setNewNumber","rows","map","person","id","addName","event","preventDefault","names","indexOf","alert","nameObject","length","concat","handleNameChange","target","value","handleNumberChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACgBD,QAAQ,CAAC,CACnC;AAAEE,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,MAAM,EAAE;AAA/B,GADmC,EAEnC;AAAED,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,MAAM,EAAE;AAAhC,GAFmC,EAGnC;AAAED,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,MAAM,EAAE;AAA/B,GAHmC,EAInC;AAAED,IAAAA,IAAI,EAAE,kBAAR;AAA4BC,IAAAA,MAAM,EAAE;AAApC,GAJmC,CAAD,CADxB;AAAA;AAAA,QACPC,OADO;AAAA,QACEC,UADF;;AAAA,qBAQkBL,QAAQ,CAAC,EAAD,CAR1B;AAAA;AAAA,QAQNM,OARM;AAAA,QAQGC,UARH;;AAAA,qBASqBP,QAAQ,CAAC,EAAD,CAT7B;AAAA;AAAA,QASNQ,SATM;AAAA,QASKC,YATL,kBAWd;;;AACA,QAAMC,IAAI,GAAG,MAAMN,OAAO,CAACO,GAAR,CAAYC,MAAM,IAAI;AAAG,IAAA,GAAG,EAAEA,MAAM,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBD,MAAM,CAACV,IAA3B,OAAkCU,MAAM,CAACT,MAAzC,CAAtB,CAAnB,CAZc,CAcd;;;AACA,QAAMW,OAAO,GAAIC,KAAD,IAAW;AACvB;AACAA,IAAAA,KAAK,CAACC,cAAN,GAFuB,CAIvB;;AACA,UAAMC,KAAK,GAAGb,OAAO,CAACO,GAAR,CAAYC,MAAM,IAAIA,MAAM,CAACV,IAA7B,CAAd,CALuB,CAOvB;;AACA,QAAIe,KAAK,CAACC,OAAN,CAAcZ,OAAd,MAA2B,CAAC,CAAhC,EAAmC;AAC/Ba,MAAAA,KAAK,CAAE,GAAEb,OAAQ,kCAAZ,CAAL;AACAC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,KAJD,CAKA;AALA,SAMK,IAAIQ,KAAK,CAACC,OAAN,CAAcZ,OAAd,MAA2B,CAAC,CAAhC,EAAmC;AACpC,cAAMc,UAAU,GAAG;AACflB,UAAAA,IAAI,EAAEI,OADS;AAEfO,UAAAA,EAAE,EAAET,OAAO,CAACiB,MAAR,GAAiB,CAFN;AAGflB,UAAAA,MAAM,EAAEK;AAHO,SAAnB;AAMAH,QAAAA,UAAU,CAACD,OAAO,CAACkB,MAAR,CAAeF,UAAf,CAAD,CAAV;AACAb,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACH;AAGJ,GA3BD;;AA6BA,QAAMc,gBAAgB,GAAIR,KAAD,IAAW;AAChCR,IAAAA,UAAU,CAACQ,KAAK,CAACS,MAAN,CAAaC,KAAd,CAAV;AACH,GAFD;;AAIA,QAAMC,kBAAkB,GAAIX,KAAD,IAAW;AAClCN,IAAAA,YAAY,CAACM,KAAK,CAACS,MAAN,CAAaC,KAAd,CAAZ;AACH,GAFD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAM,IAAA,QAAQ,EAAEX,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACU;AAAO,IAAA,KAAK,EAAER,OAAd;AAAuB,IAAA,QAAQ,EAAEiB,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADV,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAa;AAAO,IAAA,KAAK,EAAEf,SAAd;AAAyB,IAAA,QAAQ,EAAEkB,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CALJ,CAFJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXJ,EAYKhB,IAAI,EAZT,CADJ;AAkBH,CAtED;;AAwEA,eAAeT,GAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([\r\n        { name: 'Arto Hellas', number: '040-123456' },\r\n        { name: 'Ada Lovelace', number: '39-44-5323523' },\r\n        { name: 'Dan Abramov', number: '12-43-234345' },\r\n        { name: 'Mary Poppendieck', number: '39-23-6423122' }\r\n      ])\r\n\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber] = useState('')\r\n\r\n    // Display the name of each person on render\r\n    const rows = () => persons.map(person => <p key={person.id}>{person.name} {person.number}</p>)\r\n\r\n    // To add name\r\n    const addName = (event) => {\r\n        // No reload\r\n        event.preventDefault()\r\n        \r\n        // Take out names into an array\r\n        const names = persons.map(person => person.name)\r\n\r\n        // If name matches, then do not add to list\r\n        if (names.indexOf(newName) !== -1) {\r\n            alert(`${newName} already exists in the phonebook`)\r\n            setNewName('')\r\n            setNewNumber('')\r\n        }\r\n        // If name does not exist, add to list\r\n        else if (names.indexOf(newName) === -1) {\r\n            const nameObject = {\r\n                name: newName,\r\n                id: persons.length + 1,\r\n                number: newNumber\r\n            }\r\n\r\n            setPersons(persons.concat(nameObject))\r\n            setNewName('')\r\n            setNewNumber('')\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <form onSubmit={addName}>\r\n                <div>\r\n                    name: <input value={newName} onChange={handleNameChange} />\r\n                </div>\r\n                <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n            <h2>Numbers</h2>\r\n            {rows()}\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}