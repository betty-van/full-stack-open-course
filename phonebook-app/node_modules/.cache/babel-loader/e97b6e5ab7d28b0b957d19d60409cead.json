{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Betty Van\\\\Documents\\\\Learn-Programming\\\\fullStackOpen\\\\full-stack-open-part-2-phonebook\\\\phonebook-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Betty Van\\\\Documents\\\\Learn-Programming\\\\fullStackOpen\\\\full-stack-open-part-2-phonebook\\\\phonebook-app\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\n\nconst App = () => {\n  const _useState = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456',\n    id: 1\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523',\n    id: 2\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345',\n    id: 3\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122',\n    id: 4\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        persons = _useState2[0],\n        setPersons = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newName = _useState4[0],\n        setNewName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newNumber = _useState6[0],\n        setNewNumber = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        newFilter = _useState8[0],\n        setNewFilter = _useState8[1]; // Check for letters of each name for filter\n  // Making names lowercase and filter to lowercase to match\n\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().indexOf(newFilter.toLowerCase()) !== -1); // To add name\n\n  const addName = event => {\n    // No reload\n    event.preventDefault(); // Take out names into an array\n\n    const names = persons.map(person => person.name); // If name matches, then do not add to list\n\n    if (names.indexOf(newName) !== -1) {\n      alert(`${newName} already exists in the phonebook`);\n      setNewName('');\n      setNewNumber('');\n    } // If name does not exist, add to list\n    else if (names.indexOf(newName) === -1) {\n        const nameObject = {\n          name: newName,\n          id: persons.length + 1,\n          number: newNumber\n        };\n        setPersons(persons.concat(nameObject));\n        setNewName('');\n        setNewNumber('');\n      }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Phonebook\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"filter shown with a \", React.createElement(\"input\", {\n    value: newFilter,\n    onChange: handleFilterChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"add a new phone number\"), React.createElement(\"form\", {\n    onSubmit: addName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"name: \", React.createElement(\"input\", {\n    value: newName,\n    onChange: handleNameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"number: \", React.createElement(\"input\", {\n    value: newNumber,\n    onChange: handleNumberChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"add\"))), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Numbers\"), React.createElement(Rows, {\n    persons: persons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n};\n\nconst Rows = props => {\n  console.log(props);\n  props.personsToShow.map(person => React.createElement(\"p\", {\n    key: person.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, person.name, \" \", person.number));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Betty Van/Documents/Learn-Programming/fullStackOpen/full-stack-open-part-2-phonebook/phonebook-app/src/App.js"],"names":["React","useState","App","name","number","id","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","personsToShow","filter","person","toLowerCase","indexOf","addName","event","preventDefault","names","map","alert","nameObject","length","concat","handleNameChange","target","value","handleNumberChange","handleFilterChange","Rows","props","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([\r\n        { name: 'Arto Hellas', number: '040-123456', id: 1 },\r\n        { name: 'Ada Lovelace', number: '39-44-5323523', id: 2 },\r\n        { name: 'Dan Abramov', number: '12-43-234345', id: 3 },\r\n        { name: 'Mary Poppendieck', number: '39-23-6423122', id: 4 }\r\n      ])\r\n\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    const [ newFilter, setNewFilter ] = useState('')\r\n\r\n    // Check for letters of each name for filter\r\n    // Making names lowercase and filter to lowercase to match\r\n    const personsToShow = persons.filter(person => person.name.toLowerCase().indexOf(newFilter.toLowerCase()) !== -1)\r\n\r\n    // To add name\r\n    const addName = (event) => {\r\n        // No reload\r\n        event.preventDefault()\r\n        \r\n        // Take out names into an array\r\n        const names = persons.map(person => person.name)\r\n\r\n        // If name matches, then do not add to list\r\n        if (names.indexOf(newName) !== -1) {\r\n            alert(`${newName} already exists in the phonebook`)\r\n            setNewName('')\r\n            setNewNumber('')\r\n        }\r\n        // If name does not exist, add to list\r\n        else if (names.indexOf(newName) === -1) {\r\n            const nameObject = {\r\n                name: newName,\r\n                id: persons.length + 1,\r\n                number: newNumber\r\n            }\r\n\r\n            setPersons(persons.concat(nameObject))\r\n            setNewName('')\r\n            setNewNumber('')\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleFilterChange = (event) => {\r\n        setNewFilter(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <div>\r\n                filter shown with a <input value={newFilter} onChange={handleFilterChange} />\r\n            </div>\r\n            <h2>add a new phone number</h2>\r\n            <form onSubmit={addName}>\r\n                <div>\r\n                    name: <input value={newName} onChange={handleNameChange} />\r\n                </div>\r\n                <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n            <h2>Numbers</h2>\r\n            <Rows persons={persons} />\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst Rows = (props) => {\r\n    console.log(props)\r\n    props.personsToShow.map(person => <p key={person.id}>{person.name} {person.number}</p>)\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}